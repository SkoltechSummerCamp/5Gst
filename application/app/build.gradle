import java.nio.charset.StandardCharsets
import java.nio.file.Files

buildscript {
    ext {
        versionCode = 3
        versionName = "0.2.0"
    }
}

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    signingConfigs {
        debug {
            storeFile file("${rootProject.projectDir}/keystores/debug.keystore")
            storePassword "android"
            keyPassword "android"
        }
        release {
            def keystoreFile = file("${rootProject.projectDir}/keystores/release.keystore")
            if (keystoreFile.exists()) {
                storeFile keystoreFile
                storePassword System.getenv('RELEASE_KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
    }

    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    ndkVersion '25.0.8775105'

    defaultConfig {
        applicationId "ru.scoltech.openran.speedtest"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode project.ext.versionCode
        versionName project.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }

    externalNativeBuild {
        ndkBuild {
            path "$projectDir/src/main/jni/Android.mk"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(":balancerApi")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1-native-mt'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.opencsv:opencsv:5.5.1'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'io.swagger:swagger-annotations:1.5.17'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task writeVersion() {
    doLast {
        def path = rootProject.projectDir.toPath().resolve("VERSION").toAbsolutePath()
        Files.write(path, ["$versionName"], StandardCharsets.UTF_8)
    }
}
